{"version":3,"sources":["components/Square/Square.js","components/Board/Board.js","components/ScoreBoard/ScoreBoard.js","App.js","reportWebVitals.js","index.js"],"names":["Square","_ref","_classNames","value","onClick","turn","winner","handleClick","squareClass","classNames","square","Object","defineProperty","concat","react_default","a","createElement","className","Board","squares","winningSquares","createSquares","values","map","components_Square_Square","includes","key","ScoreBoard","scoreX","scoreO","winningPositions","App","_useState","useState","_useState2","slicedToArray","setTurn","_useState3","Array","fill","_useState4","setSquares","_useState5","_useState6","setWinningSquares","_useState7","X","O","_useState8","score","setScore","reset","endGame","result","objectSpread","setTimeout","components_Board_Board","newSquares","toConsumableArray","splice","i","length","_winningPositions$i","b","c","from","keys","checkForWinner","components_ScoreBoard_ScoreBoard","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.7865f0a3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Square.css';\r\nimport classNames from 'classnames';\r\n\r\nconst Square = ({ value, onClick, turn, winner }) => {\r\n\r\n    const handleClick = () => {\r\n        (turn !== null && value === null) && onClick();\r\n    }\r\n\r\n    let squareClass = classNames({\r\n        square: true,\r\n        [`square--${value}`]: value !== null,\r\n        winner: winner,\r\n    });\r\n\r\n    return (\r\n        <div className={squareClass} onClick={() => handleClick()}>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from \"../Square/Square\";\r\nimport './Board.css';\r\n\r\nconst Board = ({squares, onClick, turn, winningSquares }) => {\r\n\r\n    const createSquares = values => (\r\n        values.map( value => (\r\n            <Square\r\n                winner={winningSquares.includes(value)}\r\n                turn={turn}\r\n                onClick={() => onClick(value)}\r\n                value={squares[value]}\r\n                key={`square_${value}`}\r\n            />\r\n        ))\r\n    );\r\n\r\n    return (\r\n        <div className=\"board\">\r\n            <div className=\"row\">\r\n               {createSquares([0,1,2])}\r\n            </div>\r\n            <div className=\"row\">\r\n                {createSquares([3,4,5])}\r\n            </div>\r\n            <div className=\"row\">\r\n                {createSquares([6,7,8])}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\nimport './ScoreBoard.css';\r\n\r\nconst ScoreBoard = ({scoreX, scoreO}) => (\r\n    <div className=\"score-board\">\r\n        <div>{scoreX}</div>\r\n        <div>{scoreO}</div>\r\n    </div>\r\n)\r\n\r\nexport default ScoreBoard;","import React from 'react';\nimport { useState } from 'react';\nimport './App.css';\nimport Board from './components/Board/Board';\nimport ScoreBoard from './components/ScoreBoard/ScoreBoard';\n\nconst winningPositions = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6],\n];\n\n\nconst App = () => {\n\n  const [turn, setTurn] = useState('X');\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [winningSquares, setWinningSquares] = useState([]);\n  const [score, setScore] = useState({\n    X: 0,\n    O: 0,\n  });\n\n  const reset = () => {\n    setTurn('X');\n    setSquares(Array(9).fill(null));\n    setWinningSquares([]);\n  }\n\n  const checkForWinner = newSquares => {\n    for(let i = 0; i < winningPositions.length; i++) {\n      const [a,b,c] = winningPositions[i];\n      if(newSquares[a] && newSquares[a] === newSquares[b] && newSquares[a] === newSquares[c]) {\n        endGame(newSquares[a], winningPositions[i]);\n        return\n      }\n    }\n\n    if(!newSquares.includes(null)) {\n      endGame(null, Array.from(Array(10).keys()));\n      return\n    }\n    setTurn(turn === 'X' ? 'O' : 'X');\n  }\n\n  const handleClick = square => {\n    let newSquares = [...squares];\n    newSquares.splice(square, 1, turn);\n    setSquares(newSquares);\n    checkForWinner(newSquares);\n  }\n\n  const endGame = (result, winningPositions) => {\n    setTurn(null);\n    if(result !== null) {\n      setScore({\n        ...score,\n        [result]: score[result] + 1,\n      })\n    }\n    setWinningSquares(winningPositions);\n    setTimeout(reset, 2000);\n  }\n\n  return (\n    <div className=\"container\">\n      <Board winningSquares={winningSquares} turn={turn} squares={squares} onClick={handleClick}/>\n      <ScoreBoard scoreO={score.O} scoreX={score.X} />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}